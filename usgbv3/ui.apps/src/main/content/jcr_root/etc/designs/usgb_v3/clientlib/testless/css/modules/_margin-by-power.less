// ----------------------------------------------------------------------
// Margin By Power
// output: m-{margin-sizes},
//         m-side-{margin-sizes},
//         m-sm-side-{margin-sizes},
//         m-md-side-{margin-sizes},
//         m-vertical-{margin-sizes},
//         m-sm-vertical-{margin-sizes},
//         m-md-vertical-{margin-sizes},
//         m-left-{margin-sizes},
//         m-sm-left-{margin-sizes},
//         m-md-left-{margin-sizes},
//         m-right-{margin-sizes},
//         m-sm-right-{margin-sizes},
//         m-md-right-{margin-sizes},
//         m-top-{margin-sizes},
//         m-sm-top-{margin-sizes},
//         m-md-top-{margin-sizes},
//         m-bottom-{margin-sizes},
//         m-sm-bottom-{margin-sizes},
//         m-md-bottom-{margin-sizes}
// ----------------------------------------------------------------------



// ----------------------------------------------------------------------
// Power Function
// ----------------------------------------------------------------------
@import './sass-math-pow/sass/math-pow';



@margin-sizes: (no, xxs, xs, s, m, l, xl, xxl, 3xl, 4xl, 5xl,6xl, 7xl, 8xl, 140xl);

@margin-types: (all, side, vertical, left, right, top, bottom);


// ----------------------------------------------------------------------
// Base Multipliers
// ----------------------------------------------------------------------
@base-multiplier-map : (no:0, xxs:4 , xs:8, s:10, m:15, l:20, xl:25, xxl:30, 3xl:35, 4xl:40, 5xl:50, 6xl:60, 7xl:70, 8xl:80, 140xl:140);



// ----------------------------------------------------------------------
// Breakpoints Power
// ----------------------------------------------------------------------
@breakpoint-power-map : (xs: 1, sm:1, md:1);


.function-margin-value(@base, @power) {
    return: poly-pow(@base, @power)px;
}


.margin-content(@breakpoint) {

        @margin-power : @breakpoint;
        @if(@breakpoint == null){
            @margin-power : xs;

        }

        @each @type in @margin-types{
            @each @size in @margin-sizes{
                @if(@type == all){

                    @if(@breakpoint == null){
                        .m@{breakpoint}-@{size}{
                            margin: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power));
                        }
                    }@else{
                        .m-@{breakpoint}-@{size}{
                            margin: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power));
                        }
                    }


                }
                @else if (@type == side){
                    @if(@breakpoint == null){
                        .m@{breakpoint}-@{type}-@{size}{
                            margin: {
                              left: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power));
                              right: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power));
                            }
                        }
                    }@else{
                        .m-@{breakpoint}-@{type}-@{size}{
                            margin: {
                              left: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power));
                              right: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power));
                            }
                        }
                    }


                }
                @else if (@type == vertical){
                    @if(@breakpoint == null){
                        .m@{breakpoint}-@{type}-@{size}{
                            margin: {
                              top: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                              bottom: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                            }
                        }
                    }@else{
                        .m-@{breakpoint}-@{type}-@{size}{
                            margin: {
                              top: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                              bottom: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                            }
                        }
                    }


                }
                @else if (@type == left){
                    @if(@breakpoint == null){
                        .m@{breakpoint}-@{type}-@{size}{
                            margin-left: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }
                    @else{
                        .m-@{breakpoint}-@{type}-@{size}{
                            margin-left: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }

                }
                @else if (@type == right){
                    @if(@breakpoint == null){
                        .m@{breakpoint}-@{type}-@{size}{
                            margin-right: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }@else{
                        .m-@{breakpoint}-@{type}-@{size}{
                            margin-right: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }


                }
                @else if (@type == top){
                    @if(@breakpoint == null){
                        .m@{breakpoint}-@{type}-@{size}{
                            margin-top: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }@else{
                        .m-@{breakpoint}-@{type}-@{size}{
                            margin-top: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }


                }
                @else if (@type == bottom){
                    @if(@breakpoint == null){
                        .m@{breakpoint}-@{type}-@{size}{
                            margin-bottom: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }
                    @else{
                        .m-@{breakpoint}-@{type}-@{size}{
                            margin-bottom: margin-value(map-get(@base-multiplier-map, @size), map-get(@breakpoint-power-map, @margin-power ));
                        }
                    }


                }

            }
    }
}

.loop-margin(@breakpoint) {
    @if(@breakpoint == null){
        .margin-content(null);
    }
    @else if(@breakpoint == sm){
        .min-breakpoint(@min-bp-sm){
            .margin-content(@breakpoint);
        }

    }
    @else if(@breakpoint == md){
        .min-breakpoint(@min-bp-md){
            .margin-content(@breakpoint);
        }
    }

}

.loop-margin(null);
.loop-margin(sm);
.loop-margin(md);

// ----------------------------------------------------------------------
// Classes for Toggle Margin for each Breakpoint
// ----------------------------------------------------------------------

@media only screen and (max-width: @bp-sm + px ) and (min-width: @min-bp-xxs + px){
    .m-side-no-xs-only{
        margin-left: 0;
        margin-right: 0;
    }
  }
  
  @media only screen and (max-width: @bp-md + px) and (min-width: @min-bp-sm + px){
    .m-side-no-sm-only{
        margin-left: 0;
        margin-right: 0;
    }
  }
  
  @media only screen and (min-width: @min-bp-md + px){
    .m-side-no-md-only{
        margin-left: 0;
        margin-right: 0;
    }
  }